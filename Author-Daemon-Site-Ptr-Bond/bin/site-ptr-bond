#!/usr/bin/env perl

# Perl core
use v5.32;
use strict;
use warnings;
use experimental "signatures";

# ABSTRACT: turns baubles into trinkets

# Version
our $VERSION = '0.009';

# Perl bundled
use Carp qw(cluck longmess shortmess);
use Data::Dumper;

# Private local

# Private remote

# Community
use Mojolicious::Lite -signatures;

# Route a static index page
get '/' => sub ($c) {
    $c->render( text => 'Hello World!' );
};

# Route with parameter
get '/param' => sub ($c) {
    my $user = $c->param('user');
    if ( !$user ) {
        $c->render( text => "Hello anonymous." );
        return;
    }
    $c->render( text => "Hello $user." );
};

# Access request information
get '/agent' => sub ($c) {
    my $host = $c->req->url->to_abs->host;
    my $ua   = $c->req->headers->user_agent;
    $c->render( text => "Request by $ua reached $host." );
};

# Echo the request body and send custom header with response
get '/echo' => sub ($c) {
    my $headers = $c->req->headers->to_hash;

    my $response =
      '<table><thead><tr><th>Key</th><th>Value</th></tr></thead><tbody>';
    foreach my $request_key ( keys %{$headers} ) {
        $response .= "</tr>";
        $response .= "<td>$request_key</td>";
        $response .= "<td>$headers->{$request_key}" . "</td>";
        $response .= "</tr>";
    }
    $response .= '</tbody></table>';

    #$c->res->headers->header( 'X-Bender' => 'Bite my shiny metal ass!' );
    $c->render( 'text' => $response );
};

# Route with JSON rendering
# Modify the received JSON document and return it
put '/reverse' => sub ($c) {
    my $hash = $c->req->json;
    $hash->{message} = reverse $hash->{message};
    $c->render( json => $hash );
};

# Route with stash
get '/stash' => sub ($c) {
    $c->stash( 'one' => 23 );
    $c->render( 'template' => 'magic', 'two' => 24 );
};

# Not found (404) - Example exception
get '/missing' => sub ($c) {
    $c->render( template => 'does_not_exist' );
};

# Exception (500) - Example exception
get '/dies' => sub { die 'Intentional error' };

# Start the Mojolicious command system
app->start;

exit 0;

__DATA__

@@ magic.html.ep
The magic numbers are <%= $one %> and <%= $two %>.
